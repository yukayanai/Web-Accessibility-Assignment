{"version":3,"sources":["scss\\components\\_normalise.scss","scss\\components\\_header.scss","..\\node_modules\\mq-scss\\_mq.scss","scss\\components\\_nav.scss","scss\\variables\\_colour.scss","scss\\components\\_content.scss","scss\\components\\_footer.scss","scss\\components\\_grid.scss","scss\\components\\_typography.scss"],"names":[],"mappings":"AAAA;EACC,iBAAA;EACA,0BAAA;EACA,8BAAA;EACA,iCAAA;EACA,mBAAA;;;AAGD;EACC,sBAAA;;;AAGD;EACC,cAAA;;;AAGD;;;;;;EAMC,cAAA;;;AAGD;;EAEC,iBAAA;EACA,cAAA;;;AAGD;EACC,aAAA;;;AC/BD;EACC,gBAAA;EACA,aAAA;;AC8XC;EDhYF;IAKE,aAAA;;;AAGD;EACC,kBAAA;EACA,YAAA;;AAGC;EACC,0BAAA;EACA,mBAAA;;ACiXF;ED1WG;IACC,YAAA;;;AAQL;EACC,kBAAA;EACA,UAAA;;AAEA;EACC,mBAAA;EACA,uBAAA;EACA,MAAA;EACA,UAAA;EACA,YAAA;EACA,0BAAA;EACA,YAAA;EACA,aAAA;;ACqVD;EDjWD;IAiBE,aAAA;;;;ACgVD;EChYF;IAEE,cAAA;;;AD8XA;EChYF;IAME,kBAAA;;;AAGD;EACC,cCGM;EDFN,yBCXe;EDYf,YAAA;EACA,wBAAA;;ADmXA;ECvXD;IAOE,cAAA;;;ADgXD;ECvXD;IAWE,gBAAA;;;AAGD;EACC,eAAA;EACA,sBAAA;;AAGD;EACC,0BAAA;EACA,mBAAA;;AAGD;EACC,yBC7BiB;;ADiCnB;EACC,kBAAA;EACA,aAAA;EACA,WAAA;EACA,mBAAA;EACA,uBAAA;EACA,iBAAA;EACA,gBAAA;;ADmVA;EC1VD;IAUE,aAAA;;;AAGD;EACC,WAAA;;AAEA;EACC,iBAAA;EACA,iBAAA;;AAGD;EACC,kBAAA;EACA,qBAAA;EACA,cCpDI;;ADsDJ;EAEC,mBClEY;EDmEZ,cCtDG;EDuDH,UAAA;;AAMD;EACC,mBC3EY;ED4EZ,cC/DG;EDgEH,UAAA;;AAGD;EACC,OAAA;EACA,aAAA;;AAKD;EACC,OAAA;EACA,aAAA;;AAGD;EACC,WAAA;EACA,gBAAA;EACA,yBC9EQ;;ADiFT;EACC,WAAA;EACA,cAAA;EACA,iBAAA;EACA,2BAAA;;AAEA;EAEC,iBAAA;;AAOL;EACC,SAAA;EACA,UAAA;EACA,gBAAA;EACA,eAAA;;;AD2QA;EG/XD;IAEE,kBAAA;IACA,eAAA;;;AH4XD;EG/XD;IAOE,gBAAA;IACA,kBAAA;;;AAKD;EACC,gBAAA;;AHiXD;EGlXA;IAIE,aAAA;;;AAGD;EACC,kBAAA;;AAGD;EACC,gBAAA;EACA,gBAAA;;AAIH;EACC,8DAAA;;AAGD;;EAEC,8DAAA;;AAGD;EACC,yBDzCe;;AFgYf;EGxVD;IAIE,oBAAA;;;AAIA;;EAEC,cDrCI;;AFmXN;EGjVA;IAOE,UAAA;IACA,iBAAA;IACA,cAAA;;;AHwUF;EGjVA;IAaE,WAAA;IACA,gBAAA;;EAEA;IACC,iBAAA;IACA,kBAAA;;;AAMJ;EACC,kBAAA;;AAEA;;EAEC,2BAAA;;AAED;EACC,aAAA;;AAIF;EACC,yBDvEM;ECwEN,yBAAA;;AAEA;EACC,kBAAA;;AAIA;EACC,qBAAA;EACA,cD9Fa;;ACgGb;EACC,0BAAA;;AAIH;EACC,cAAA;EACA,gBAAA;EACA,kBAAA;EACA,yBDvFU;ECwFV,sBAAA;;AAED;EACC,gBAAA;;AAIF;EACC,yBD5GkB;;AC+GnB;EACC,yBDnHkB;;ACsHnB;EACC,yBDtHkB;;ACyHnB;;;EAGC,yBAAA;EACA,kBAAA;;AAEA;;;EACC,aAAA;;AAGD;;;;;;EAEC,cD5HK;;ACgIP;;;EAGC,mBAAA;;AAME;EACC,0BAAA;;AAEA;EACC,cDvJc;;AC+JlB;EACC,yBAAA;EACA,kBAAA;;AAEA;EACC,aAAA;;AAMF;EACC,gBAAA;EACA,cD/Kc;ECgLd,gBAAA;;AAGA;EACC,SAAA;;AAGF;EACC,kBAAA;;AAEA;EACC,aAAA;EACA,eAAA;;AAMH;EACC,SAAA;EACA,sBAAA;EACA,WAAA;EACA,YAAA;EACA,gBAAA;EACA,UAAA;EACA,kBAAA;EACA,UAAA;;AAED;EACC,qBAAA;;AAEA;EACC,0BAAA;;AAGD;EACC,0BAAA;EACA,mBAAA;;AAGF;EACC,yBDzNe;EC0Nf,yBAAA;EACA,cD9MM;EC+MN,iBAAA;EACA,qBAAA;EACA,kBAAA;EACA,kBAAA;EACA,sBAAA;EACA,kBAAA;;AAEA;EAEC,yBDxNK;ECyNL,cDjOiB;ECkOjB,yBAAA;EACA,qBAAA;;AAGD;EACC,0BAAA;EACA,mBAAA;;AAIF;EACC,sBAAA;EACA,yBAAA;EACA,cDvOM;ECwON,iBAAA;EACA,qBAAA;EACA,kBAAA;EACA,kBAAA;EACA,sBAAA;EACA,kBAAA;;AAEA;EAEC,yBDjPK;ECkPL,cD1PiB;EC2PjB,yBAAA;EACA,qBAAA;;AAGD;EACC,0BAAA;EACA,mBAAA;;AAIF;EACC,yBD9PM;EC+PN,yBAAA;EACA,cD7Qe;EC8Qf,iBAAA;EACA,qBAAA;EACA,kBAAA;EACA,kBAAA;EACA,sBAAA;EACA,kBAAA;;AAEA;EAEC,yBDvRc;ECwRd,cD3QK;EC4QL,yBAAA;EACA,qBAAA;;AAGD;EACC,0BAAA;EACA,mBAAA;;AAIF;EACC,oBAAA;;AAED;EACC,iBAAA;EACA,cAAA;;AAED;EACC,2BAAA;EACA,sBAAA;EACA,WAAA;EACA,iBAAA;EACA,mBAAA;EACA,uBAAA;;AAEA;EACC,iBAAA;EACA,cAAA;;AAGD;EACC,kBAAA;;AAGD;EACC,yBD/SK;ECgTL,yBAAA;EACA,kBAAA;EACA,UAAA;EACA,iBAAA;EACA,cAAA;EACA,UAAA;EACA,kBAAA;;AH6DD;EGrEA;IAWE,yBDzTI;IC0TJ,YAAA;IACA,kBAAA;IACA,WAAA;IACA,cAAA;;;AAGD;EACC,iBAAA;EACA,sBAAA;EACA,cDtUI;;AC0UN;EACC,yBDrVc;ECsVd,UAAA;EACA,iBAAA;EACA,cAAA;EACA,kBAAA;;AHuCD;EG5CA;IAQE,WAAA;IACA,cAAA;;;AAGD;EACC,SAAA;EACA,qBAAA;;AAEA;EACC,cDxVG;ECyVH,0BAAA;;AAEA;EACC,cDlWc;;ACqWf;EACC,0BAAA;EACA,mBAAA;;;AC9WN;EACC,yBFImB;EEHnB,WAAA;;AAEA;EACC,cFQM;;AELP;;EAEC,cFGM;;AEAP;EACC,cFDM;;AEGN;EACC,cFViB;;AEalB;EACC,0BAAA;EACA,mBAAA;;AAIF;EACC,UAAA;EACA,SAAA;;AAEA;EACC,gBAAA;EACA,SAAA;EACA,UAAA;;AAIF;EACC,oBAAA;EACA,mBAAA;EACA,gCAAA;;AAME;EACC,eAAA;EACA,mBAAA;;AAKE;EACC,cF/CY;;AFyXlB;EIjUA;IAEE,iBAAA;;;;AClEJ;EACC,WAAA;EACA,aAAA;EACA,8BAAA;;;AAIA;EACC,iBAAA;EACA,cAAA;EACA,aAAA;EACA,4DAAA;EACA,cAAA;EACA,oBAAA;;AAEA;EACC,kBAAA;EACA,cAAA;;;AAMF;EACC,aAAA;EACA,4DAAA;EACA,cAAA;;AAGD;EACC,aAAA;EACA,cAAA;;AAEA;EACC,kBAAA;EACA,cAAA;;AAIF;EACC,aAAA;;;AAIF;EACC,qBAAA;EAEC;IACC,iBAAA;IACA,cAAA;IACA,aAAA;IACA,8BAAA;IACA,cAAA;IACA,oBAAA;;EAEA;IACC,kBAAA;IACA,cAAA;;;EAMF;IACC,kCAAA;;EAED;IACC,8BAAA;;;AAKH;EACC,qBAAA;EAEC;IACC,eAAA;;EAEA;IACC,oBAAA;IACA,cAAA;;;EAKF;IACC,2BAAA;;;AAKH;EACC,2BAAA;EAEC;IACC,2BAAA;;;AC/FH;EACC,oBAAA;EACA,sBAAA;;;AAKD;;;;;;EAMC,gBAAA;EACA,kBAAA;EACA,cJdgB;;;AIiBjB;EACC,kBAAA;EACA,SAAA;;;AAGD;EACC,kBAAA;EACA,SAAA;;;AAGD;EACC,kBAAA;;;AAGD;EACC,kBAAA;;;AAGD;EACC,kBAAA;;;AAGD;EACC,kBAAA;;;AAGD,WAAA;AACA;EACC;IACC,iBAAA;;;EAED;IACC,iBAAA;;;EAED;IACC,iBAAA;;;AAMF;EACC,cJjDO;EIkDP,cAAA;EACA,kBAAA;EACA,kBAAA;;;AAIA;EACC,mBAAA;;;AAKD;EACC,cAAA;EACA,iBAAA;;AAEA;EACC,qBAAA;;AAIF;EACC,kBAAA;;AAIA;EACC,gBAAA","file":"style.a6dae8f7.css","sourceRoot":"..\\src","sourcesContent":["html {\r\n\tline-height: 1.15;\r\n\t-ms-text-size-adjust: 100%;\r\n\t-webkit-text-size-adjust: 100%;\r\n\tfont-family: 'Roboto', sans-serif;\r\n\tfont-weight: normal;\r\n}\r\n\r\n* {\r\n\tbox-sizing: border-box;\r\n}\r\n\r\nbody {\r\n\tmargin: 0 auto;\r\n}\r\n\r\narticle,\r\nfooter,\r\nheader,\r\nmain,\r\nnav,\r\nsection {\r\n\tdisplay: block;\r\n}\r\n\r\nheader,\r\n.footer-wrapper {\r\n\tmax-width: 1200px;\r\n\tmargin: 0 auto;\r\n}\r\n\r\nfooter {\r\n\tpadding: 20px;\r\n}\r\n","// Header\r\nheader {\r\n\tmargin-top: 20px;\r\n\tpadding: 20px;\r\n\r\n\t@include mq($mq-tablet) {\r\n\t\tmargin-top: 0;\r\n\t}\r\n\r\n\t.wrapper {\r\n\t\tposition: relative;\r\n\t\twidth: 160px;\r\n\r\n\t\ta {\r\n\t\t\t&:focus {\r\n\t\t\t\toutline: 3px solid $focus-blue;\r\n\t\t\t\toutline-offset: 4px;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t@include mq($mq-tablet) {\r\n\t\t\t.wrapper {\r\n\t\t\t\t.logo {\r\n\t\t\t\t\ta img {\r\n\t\t\t\t\t\theight: 60px;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// Skip Link\r\n\t#skip-link {\r\n\t\tposition: absolute;\r\n\t\ttop: -120%;\r\n\r\n\t\t&:focus {\r\n\t\t\talign-items: center;\r\n\t\t\tjustify-content: center;\r\n\t\t\ttop: 0;\r\n\t\t\tleft: 150%;\r\n\t\t\twidth: 170px;\r\n\t\t\toutline: solid 3px $primary-colour;\r\n\t\t\tpadding: 4px;\r\n\t\t\tdisplay: flex;\r\n\t\t}\r\n\r\n\t\t// TODO: check why doing this\r\n\t\t@include mq($mq-tablet) {\r\n\t\t\tdisplay: none;\r\n\t\t}\r\n\t}\r\n}\r\n","$mediaQuery: ();\r\n\r\n$mq-ems: false !default;\r\n$mq-em-base: 16px !default;\r\n$mq-debug: false !default;\r\n\r\n@import '_functions';\r\n\r\n@function mediaType($mediaType: false, $hasAnd: true){\r\n\t$media: '';\r\n\t$mediaType: if($mediaType == 'not', 'not all', $mediaType);\r\n\t@if ($mediaType){\r\n\t\t$media: if($hasAnd, $mediaType + ' and ', $mediaType);\r\n\t}\r\n\t@return $media;\r\n}\r\n\r\n@function isRatio($string){\r\n\t@if (type-of($string) == 'string' and $string != 'plus'){\r\n\t\t@if (str-index($string, \"/\")){\r\n\t\t\t@return true;\r\n\t\t}\r\n\t}\r\n\t@return false;\r\n}\r\n\r\n@function isMedia($string){\r\n\t@return type-of($string) == 'string' and $string != 'plus' and not isRatio($string);\r\n}\r\n\r\n@function calculateMQ($range, $breakpoint_1: null, $breakpoint_2: null, $mediaType: false, $debug: $mq-debug){\r\n\r\n\t$swap-values: false;\r\n\r\n\t$mediaTypeString: '' + $mediaType + '';\r\n\r\n\t$invalidMediaType:\r\n\t\t($mediaType != false) and (\r\n\t\t\t(type-of($mediaType) == 'number') or\r\n\t\t\t(str-index($mediaTypeString, '/') != null)\r\n\t\t);\r\n\r\n\t@if ($invalidMediaType == true){\r\n\t\t@error '\"'+$mediaType+'\" is not a valid media type';\r\n\t}\r\n\r\n\t@if ($range == null) {\r\n\t\t@return $mediaType;\r\n\t}\r\n\r\n\t@if ($breakpoint_2 != null){\r\n\r\n\t\t@if (isRatio($breakpoint_1)){\r\n\r\n\t\t\t$A1: get-start($breakpoint_1);\r\n\t\t\t$A2: get-end($breakpoint_1);\r\n\r\n\t\t\t$B1: get-start($breakpoint_2);\r\n\t\t\t$B2: get-end($breakpoint_2);\r\n\r\n\t\t\t@if ($debug) {\r\n\t\t\t\t@debug range_numbers \"('A1/A2', 'B1/B2')\" (A1: $A1, A2: $A2, B1: $B1, B2: $B2);\r\n\t\t\t}\r\n\r\n\t\t\t$swap-values: $A1 / $A2 < $B1 / $B2;\r\n\t\t} @else {\r\n\t\t\t$swap-values: $breakpoint_1 < $breakpoint_2;\r\n\t\t}\r\n\r\n\t\t//Swaps the breakpoint_s around\r\n\t\t@if ($swap-values){\r\n\t\t\t$temp: $breakpoint_1;\r\n\t\t\t$breakpoint_1: $breakpoint_2;\r\n\t\t\t$breakpoint_2: $temp;\r\n\t\t}\r\n\r\n\t} @else {\r\n\t\t$breakpoint_2: 0;\r\n\t}\r\n\r\n\t$mediaString: '';\r\n\r\n\t@if ($range == 'orientation'){\r\n\t\t@if ($breakpoint_1 != 'landscape' and $breakpoint_1 != 'portrait'){\r\n\t\t\t@error '\"orientation\" range only accepts the values \"landscape\" and \"portrait\". Currently providing the value \"#{$breakpoint_1}\".';\r\n\t\t}\r\n\t}\r\n\r\n\t@if ($debug){\r\n\t\t@debug calculateMQ (range: $range, breakpoint_1: $breakpoint_1, breakpoint_2: $breakpoint_2, mediaType: $mediaType);\r\n\t}\r\n\r\n\t@if (str-index($range, 'inside') != null or str-index($range, 'outside') != null){\r\n\t\t@if ($breakpoint_2 == 0) {\r\n\t\t\t@error '\"#{$range}\" range requires a second value. Currently only providing \"#{$breakpoint_1}\" as a value.';\r\n\t\t}\r\n\t} @else {\r\n\t\t@if ($breakpoint_2 != 0) {\r\n\t\t\t@error '\"#{$range}\" range can only take one value. Currently providing both \"#{$breakpoint_1}\" and \"#{$breakpoint_2}\" as values.';\r\n\t\t}\r\n\t}\r\n\r\n\t@if (str-index($range, 'ratio') == null){\r\n\t\t//if a standard media query\r\n\t\t@if (type-of($breakpoint_1) != number and $range != 'orientation'){\r\n\t\t\t@if ($breakpoint_2 != 0) {\r\n\t\t\t\t@error '\"#{$range}\" range requires the breakpoint_s (\"#{$breakpoint_1}\" and \"#{$breakpoint_2}\") to be pixel values';\r\n\t\t\t} @else {\r\n\t\t\t\t@error '\"#{$range}\" range requires the breakpoint_ \"#{$breakpoint_1}\" to be a pixel value';\r\n\t\t\t}\r\n\t\t}\r\n\t} @else {\r\n\t\t//else if it's a ratio...\r\n\t\t@if ((($breakpoint_2 != 0) and (type-of($breakpoint_2) != string))){\r\n\t\t\t@error '\"#{$range}\" range requires the breakpoint_s (\"#{$breakpoint_1}\" and \"#{$breakpoint_2}\") to both be strings in this format \"4 / 3\" (width ratio / height ratio).';\r\n\t\t} @else if (type-of($breakpoint_1) != string) {\r\n\t\t\t@error '\"#{$range}\" range requires the breakpoint_ \"#{$breakpoint_1}\" to be a string in this format \"4 / 3\" (width ratio / height ratio).';\r\n\t\t}\r\n\t}\r\n\r\n\t$breakpoint_1_plus: $breakpoint_1 + 1;\r\n\t$breakpoint_2_plus: $breakpoint_2 + 1;\r\n\r\n\t$media: if($mediaType, $mediaType, '');\r\n\r\n\t@if ($mq-ems) {\r\n\t\t$breakpoint_1: _mq-em($breakpoint_1);\r\n\t\t$breakpoint_2: _mq-em($breakpoint_2);\r\n\t\t$breakpoint_1_plus: _mq-em($breakpoint_1_plus);\r\n\t\t$breakpoint_2_plus: _mq-em($breakpoint_2_plus);\r\n\t}\r\n\r\n\t$min-width: '(min-width: #{$breakpoint_1_plus})';\r\n\t$max-width: '(max-width: #{$breakpoint_1})';\r\n\r\n\t$inside-width: '(max-width: #{$breakpoint_1}) and (min-width: #{$breakpoint_2_plus})';\r\n\t$outside-width: '(max-width: #{$breakpoint_2}), '+$media+'(min-width: #{$breakpoint_1_plus})';\r\n\r\n\t$mediaString: map-get((\r\n\t//*1 value given*/\r\n\t\tmin : $min-width,\r\n\t\tmax : $max-width,\r\n\t\r\n\t\tmin-width : $min-width,\r\n\t\tmax-width : $max-width,\r\n\r\n\t\tmin-height : '(min-height: #{$breakpoint_1_plus})',\r\n\t\tmax-height : '(max-height: #{$breakpoint_1})',\r\n\r\n\t\tratio : '(aspect-ratio: #{$breakpoint_1})',\r\n\t\tmin-ratio : '(min-aspect-ratio: #{$breakpoint_1})',\r\n\t\tmax-ratio : '(max-aspect-ratio: #{$breakpoint_1})',\r\n\r\n\t\tdevice-ratio : '(device-aspect-ratio: #{$breakpoint_1})',\r\n\t\tmin-device-ratio : '(min-device-aspect-ratio: #{$breakpoint_1})',\r\n\t\tmax-device-ratio : '(max-device-aspect-ratio: #{$breakpoint_1})',\r\n\r\n\t\torientation : '(orientation: #{$breakpoint_1})',\r\n\r\n\t//*2 values given*/\r\n\t\tinside : $inside-width,\r\n\t\toutside : $outside-width,\r\n\r\n\t\tinside-width : $inside-width,\r\n\t\toutside-width : $outside-width,\r\n\r\n\t\tinside-height : '(max-height: #{$breakpoint_1}) and (min-height: #{$breakpoint_2_plus})',\r\n\t\toutside-height : '(max-height: #{$breakpoint_2}), '+$media+'(min-height: #{$breakpoint_1_plus})',\r\n\t\t\r\n\t\tinside-ratio : '(max-aspect-ratio: #{$breakpoint_1}) and (min-aspect-ratio: #{$breakpoint_2})',\r\n\t\toutside-ratio : '(max-aspect-ratio: #{$breakpoint_2}), '+$media+'(min-aspect-ratio: #{$breakpoint_1})',\r\n\t\t\r\n\t\tinside-device-ratio : '(max-device-aspect-ratio: #{$breakpoint_1}) and (min-device-aspect-ratio: #{$breakpoint_2})',\r\n\t\toutside-device-ratio : '(max-device-aspect-ratio: #{$breakpoint_2}), '+$media+'(min-device-aspect-ratio: #{$breakpoint_1})',\r\n\t), $range);\r\n\r\n\t@return $mediaString;\r\n}\r\n\r\n@function isBasicQuery($range) {\r\n\t$first_is_string: type-of(nth($range,1)) == string;\r\n\t$longer_than_1: length($range) > 1;\r\n\t$not_plus_statment: true;\r\n\t@if ($longer_than_1) {\r\n\t\t$not_plus_statment: nth($range,2) != 'plus';\r\n\t}\r\n\t@return $first_is_string and $longer_than_1 and $not_plus_statment;\r\n}\r\n\r\n@function get_values($mqSet, $debug: $mq-debug){\r\n\r\n\t@if ($mq-debug) {\r\n\t\t@debug mqSet (length: length($mqSet), mqSet: $mqSet);\r\n\t}\r\n\r\n\t$range: nth($mqSet,1);\r\n\t$breakpoint_1: null;\r\n\t$breakpoint_2: null;\r\n\t$media: false;\r\n\r\n\t@if (length($mqSet) == 1){\r\n\t\t$first: nth($mqSet, 1);\r\n\t\t@if (type-of($first) != 'string'){\r\n\t\t\t@error '\"#{$first}\" is not a valid media type';\r\n\t\t}\r\n\t\t$range: null;\r\n\t\t$media: $first;\r\n\t}\r\n\r\n\t@if (length($mqSet) > 1){\r\n\t\t$breakpoint_1: nth($mqSet, 2);\r\n\t}\r\n\r\n\t@if (length($mqSet) == 3){\r\n\t\t$third: nth($mqSet, 3);\r\n\r\n\t\t@if (type-of($third) == 'number' or isRatio($third)){\r\n\t\t\t$breakpoint_2: $third;\r\n\t\t} @else {\r\n\t\t\t$media: $third;\r\n\t\t}\r\n\t}\r\n\r\n\t@if (length($mqSet) == 4){\r\n\t\t$third: nth($mqSet, 3);\r\n\t\t$fourth: nth($mqSet, 4);\r\n\r\n\t\t@if ($fourth == false and isMedia($third)){\r\n\t\t\t$media: $third;\r\n\t\t} @else {\r\n\t\t\t$breakpoint_2: $third;\r\n\t\t\t$media: $fourth;\r\n\t\t}\r\n\r\n\t\t@if ($media == \" and \") {\r\n\t\t\t$media: '';\r\n\t\t}\r\n\t}\r\n\r\n\t$finalValues: (\r\n\t\trange: $range,\r\n\t\tbreakpoint_1: $breakpoint_1,\r\n\t\tbreakpoint_2: $breakpoint_2,\r\n\t\tmedia: mediaType($media, $range != null),\r\n\t);\r\n\r\n\t@if ($debug) {\r\n\t\t@debug get_values_result $finalValues;\r\n\t}\r\n\r\n\t@return $finalValues;\r\n}\r\n\r\n@function get_media($mqSet){\r\n\t@return map-get( get_values($mqSet), media);\r\n}\r\n\r\n@function calculateBasicQuery($mqSet, $isAndStatement: false, $debug: $mq-debug){\r\n\t$values: get_values($mqSet, $debug);\r\n\r\n\t$range: map-get($values, range);\r\n\t$breakpoint_1: map-get($values, breakpoint_1);\r\n\t$breakpoint_2: map-get($values, breakpoint_2);\r\n\t$media: map-get($values, media);\r\n\r\n\t@if ($range == null) {\r\n\t\t//if only a media type is given return nothing because it is added elsewhere\r\n\t\t@return '';\r\n\t}\r\n\r\n\t@if ((str-index($range, 'outside') != null) and $isAndStatement){\r\n\t\t$error: 'All \"outside\" range types are incompatible with \"plus\" statements: (' + $mqSet + ')';\r\n\t\t@error $error;\r\n\t}\r\n\r\n\t@return calculateMQ($range, $breakpoint_1, $breakpoint_2, $media, $debug: $debug);\r\n}\r\n\r\n@function joinQueries($range, $queryString: (), $debug: $mq-debug){\r\n\r\n\t$isAndStatement: false;\r\n\t$contains_media_only_statement: false;\r\n\t$media_statement_at_start: true;\r\n\r\n\t@if (length($range) > 1) {\r\n\t\t@for $i from 1 through length($range) {\r\n\t\t\t$statement: nth($range,$i);\r\n\t\t\t@if ($debug) {\r\n\t\t\t\t@debug joinQueries_statement $statement;\r\n\t\t\t}\r\n\t\t\t$mediaNotFirst: $i != 1 and isMedia($statement);\r\n\t\t\t@if ($statement == 'plus') {\r\n\t\t\t\t$isAndStatement: true;\r\n\t\t\t\t@if ($i == 2 and length(nth($range,1)) == 1) {\r\n\t\t\t\t\t$contains_media_only_statement: true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t@if ($mediaNotFirst){\r\n\t\t\t\t$media_statement_at_start: false;\r\n\t\t\t}\r\n\t\t}\r\n\t} @else if (type-of(nth($range,1)) == 'string') {\r\n\t\t$contains_media_only_statement: true;\r\n\t}\r\n\r\n\t@if ($isAndStatement and not $media_statement_at_start) {\r\n\t\t@error 'Media type definitions must be specified at the start of plus statements: (#{$range})';\r\n\t}\r\n\r\n\t//Uses this functionality if using a single level MQ variable\r\n\t//eg:\r\n\t//$MQ-example--single: inside, 1000px, 500px;\r\n\t//@include mq($MQ-example--single){}\r\n\t@if (isBasicQuery($range)){\r\n\r\n\t\t@return get_media($range) + calculateBasicQuery($range, $isAndStatement, $debug: $debug);\r\n\r\n\t//Uses this functionality if using a multi level MQ variable\r\n\t//eg:\r\n\t//$MQ-example--multiple:\r\n\t//\t(inside, 1000px, 500px),\r\n\t//\t(min, 1200px)\r\n\t//;\r\n\t//@include mq($MQ-example--multiple){}\r\n\t} @else {\r\n\r\n\t\t@each $mqSet in $range {\r\n\r\n\t\t\t@if ($mqSet != 'plus') {\r\n\t\t\t\t@if (isBasicQuery($mqSet)){\r\n\r\n\t\t\t\t\t$newQuery: calculateBasicQuery($mqSet, $isAndStatement, $debug: $debug);\r\n\r\n\t\t\t\t\t$media: get_media($mqSet);\r\n\r\n\t\t\t\t\t@if ($isAndStatement) {\r\n\t\t\t\t\t\t@if ($queryString == ()){\r\n\t\t\t\t\t\t\t$queryString: $media + $newQuery;\r\n\t\t\t\t\t\t} @else if ($newQuery != '') {\r\n\t\t\t\t\t\t\t$queryString: $queryString + ' and ' + $newQuery;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} @else {\r\n\t\t\t\t\t\t$queryString: append($queryString, $media + $newQuery, 'comma');\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} @else {\r\n\r\n\t\t\t\t\t$is_media_only_statment: $contains_media_only_statement and type-of($mqSet) == 'string';\r\n\r\n\t\t\t\t\t@if ($isAndStatement) {\r\n\t\t\t\t\t\t@if ($is_media_only_statment) {\r\n\t\t\t\t\t\t\t$queryString: mediaType($mqSet, false);\r\n\t\t\t\t\t\t} @else {\r\n\t\t\t\t\t\t\t$queryString: joinQueries($mqSet, $queryString, $debug);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t@if (length($queryString) > 1){\r\n\t\t\t\t\t\t\t$error: 'mq-scss does not support \"or\" statements inside \"plus\" statements: ' + $queryString;\r\n\t\t\t\t\t\t\t@error $error;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} @else {\r\n\t\t\t\t\t\t@if ($is_media_only_statment) {\r\n\t\t\t\t\t\t\t$queryString: $mqSet;\r\n\t\t\t\t\t\t} @else {\r\n\t\t\t\t\t\t\t$queryString: append($queryString, joinQueries($mqSet, $debug: $debug), 'comma');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t@return $queryString;\r\n\t}\r\n}\r\n\r\n@mixin mq($range, $breakpoint_1: null, $breakpoint_2: null, $mediaType: false, $debug: $mq-debug) {\r\n\r\n\t@if ($debug) {\r\n\t\t@debug $range;\r\n\t}\r\n\r\n\t@if (length($range) > 1) {\r\n\t\t$finalOutput: joinQueries($range, $debug: $debug);\r\n\t\t@if ($debug) {\r\n\t\t\t@debug '!!!!! FINAL OUTPUT: @media ' + $finalOutput;\r\n\t\t}\r\n\t\t@media #{$finalOutput} {\r\n\t\t\t@content;\r\n\t\t}\r\n\r\n\t//Uses this functionality if placing MQ data inline\r\n\t//eg:\r\n\t//@include mq(inside, 1000px, 500px, 'screen');\r\n\t} @else {\r\n\t\t//standardises the values to prevent mediaType from getting confused with breakpoint_2\r\n\t\t$mediaOnly: $breakpoint_1 == null and $breakpoint_2 == null and $mediaType == false;\r\n\t\t@if ($debug) {\r\n\t\t\t@debug inline_mq_values (range: $range, breakpoint_1: $breakpoint_1, breakpoint_2: $breakpoint_2, mediaType: $mediaType, mediaOnly: $mediaOnly);\r\n\t\t}\r\n\t\t$values: get_values(if($mediaOnly, $range, ($range $breakpoint_1 $breakpoint_2 $mediaType)), $debug: $debug);\r\n\r\n\t\t$newRange: map-get($values, range);\r\n\t\t$newWidth1: map-get($values, breakpoint_1);\r\n\t\t$newWidth2: map-get($values, breakpoint_2);\r\n\t\t$newMedia: map-get($values, media);\r\n\r\n\t\t@if ($mediaOnly) {\r\n\r\n\t\t\t@if ($debug) {\r\n\t\t\t\t@debug '!!!!! FINAL OUTPUT: @media ' + $newMedia;\r\n\t\t\t}\r\n\r\n\t\t\t@media #{ $newMedia } {\r\n\t\t\t\t@content;\r\n\t\t\t}\r\n\r\n\t\t} @else {\r\n\r\n\t\t\t$finalMQ: $newMedia + calculateMQ($newRange, $newWidth1, $newWidth2, $debug: $debug);\r\n\r\n\t\t\t@if ($debug) {\r\n\t\t\t\t@debug '!!!!! FINAL OUTPUT: @media ' + $finalMQ ;\r\n\t\t\t}\r\n\r\n\t\t\t@media #{ $finalMQ } {\r\n\t\t\t\t@content;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t}\r\n\r\n\t@if ($debug){\r\n\t\t//spacer for seperating results\r\n\t\t@debug '';\r\n\t}\r\n\r\n}\r\n\r\n@mixin retina($density: 2) {\r\n\t\t@media\r\n\t\tonly screen and (min-device-pixel-ratio: $density),\r\n\t\tonly screen and (min-resolution: $density * 96ppi),\r\n\t\tonly screen and (min-resolution: $density * 1dppx) {\r\n\t\t\t@content;\r\n\t}\r\n}\r\n","// Navigation\r\nnav {\r\n\t@include mq($mq-desktop) {\r\n\t\tmargin: 40px 0;\r\n\t}\r\n\r\n\t@include mq($mq-tablet) {\r\n\t\tmargin: 10px 0 0 0;\r\n\t}\r\n\r\n\t#hamburger {\r\n\t\tcolor: $white;\r\n\t\tbackground-color: $primary-colour;\r\n\t\tborder: none;\r\n\t\tpadding: 4px 6px 6px 6px;\r\n\r\n\t\t@include mq($mq-desktop) {\r\n\t\t\tmargin: 40px 0;\r\n\t\t}\r\n\r\n\t\t@include mq($mq-tablet) {\r\n\t\t\tdisplay: initial;\r\n\t\t}\r\n\r\n\t\ti {\r\n\t\t\tfont-size: 2rem;\r\n\t\t\tvertical-align: middle;\r\n\t\t}\r\n\r\n\t\t&:focus {\r\n\t\t\toutline: solid 3px $focus-blue;\r\n\t\t\toutline-offset: 4px;\r\n\t\t}\r\n\r\n\t\t&:hover {\r\n\t\t\tbackground-color: $secondary-colour3;\r\n\t\t}\r\n\t}\r\n\r\n\t.nav {\r\n\t\tmargin: 20px 0 0 0;\r\n\t\tdisplay: flex;\r\n\t\twidth: 100%;\r\n\t\talign-items: center;\r\n\t\tjustify-content: center;\r\n\t\tfont-size: 1.18em;\r\n\t\tfont-weight: 700;\r\n\r\n\t\t@include mq($mq-tablet) {\r\n\t\t\tdisplay: none;\r\n\t\t}\r\n\r\n\t\tli {\r\n\t\t\tfloat: left;\r\n\r\n\t\t\ti {\r\n\t\t\t\tfont-size: 0.85em;\r\n\t\t\t\tpadding-left: 6px;\r\n\t\t\t}\r\n\r\n\t\t\t> a {\r\n\t\t\t\tpadding: 10px 15px;\r\n\t\t\t\ttext-decoration: none;\r\n\t\t\t\tcolor: $black;\r\n\r\n\t\t\t\t&:hover,\r\n\t\t\t\t&:focus {\r\n\t\t\t\t\tbackground: $primary-colour;\r\n\t\t\t\t\tcolor: $white;\r\n\t\t\t\t\toutline: 0;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t&:hover,\r\n\t\t\t&:focus {\r\n\t\t\t\t> a {\r\n\t\t\t\t\tbackground: $primary-colour;\r\n\t\t\t\t\tcolor: $white;\r\n\t\t\t\t\toutline: 0;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tul {\r\n\t\t\t\t\tleft: 0;\r\n\t\t\t\t\topacity: 0.99;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tul {\r\n\t\t\t\t&.show-menu {\r\n\t\t\t\t\tleft: 0;\r\n\t\t\t\t\topacity: 0.99;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tli {\r\n\t\t\t\t\tfloat: none;\r\n\t\t\t\t\tposition: static;\r\n\t\t\t\t\tbackground-color: $light-grey;\r\n\t\t\t\t}\r\n\r\n\t\t\t\ta {\r\n\t\t\t\t\tfloat: none;\r\n\t\t\t\t\tdisplay: block;\r\n\t\t\t\t\ttext-shadow: none;\r\n\t\t\t\t\ttransition: 0.1s linear all;\r\n\r\n\t\t\t\t\t&:hover,\r\n\t\t\t\t\t&:focus {\r\n\t\t\t\t\t\ttext-shadow: none;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t.list-reset {\r\n\t\tmargin: 0;\r\n\t\tpadding: 0;\r\n\t\tlist-style: none;\r\n\t\tflex-wrap: wrap;\r\n\t}\r\n}\r\n","// Primary\r\n$primary-colour: #9e005d;\r\n\r\n// Secondary\r\n$secondary-colour1: #007ab8;\r\n$secondary-colour2: #dd3113;\r\n$secondary-colour3: #470028;\r\n$secondary-colour4: #d21d84;\r\n$secondary-colour5: #f9b2a9;\r\n\r\n// Black\r\n$black: #343434;\r\n\r\n// White\r\n$white: #ffffff;\r\n\r\n//Grey\r\n$grey: #bfbfbf;\r\n$light-grey: #f9f9f9;\r\n$topic-pill: #efefef;\r\n\r\n$focus-blue: #005fcc;\r\n","// Content\r\nmain {\r\n\th2 {\r\n\t\t@include mq($mq-desktop) {\r\n\t\t\ttext-align: center;\r\n\t\t\tpadding: 40px 0;\r\n\t\t}\r\n\r\n\t\t@include mq($mq-tablet) {\r\n\t\t\ttext-align: left;\r\n\t\t\tpadding: 30px 20px;\r\n\t\t}\r\n\t}\r\n\r\n\t.welcome {\r\n\t\t.bg-image {\r\n\t\t\tpadding: 140px 0;\r\n\r\n\t\t\t@include mq($mq-tablet) {\r\n\t\t\t\tpadding: 20px;\r\n\t\t\t}\r\n\r\n\t\t\th2 {\r\n\t\t\t\ttext-align: center;\r\n\t\t\t}\r\n\r\n\t\t\t.slogan {\r\n\t\t\t\tfont-size: 1.4em;\r\n\t\t\t\tfont-weight: 700;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t#hero {\r\n\t\tbackground-image: url('../img/Plumtree-hero-image.jpg');\r\n\t}\r\n\r\n\t#bg-help,\r\n\t#bg-blog {\r\n\t\tbackground-image: url('../img/Plumtree-bg-image.jpg');\r\n\t}\r\n\r\n\t#innov {\r\n\t\tbackground-color: $primary-colour;\r\n\r\n\t\t@include mq($mq-tablet) {\r\n\t\t\tpadding-bottom: 20px;\r\n\t\t}\r\n\r\n\t\t.container {\r\n\t\t\th2,\r\n\t\t\tp {\r\n\t\t\t\tcolor: $white;\r\n\t\t\t}\r\n\r\n\t\t\t@include mq($mq-desktop) {\r\n\t\t\t\twidth: 60%;\r\n\t\t\t\tmax-width: 1200px;\r\n\t\t\t\tmargin: 0 auto;\r\n\t\t\t}\r\n\r\n\t\t\t@include mq($mq-tablet) {\r\n\t\t\t\twidth: 100%;\r\n\t\t\t\tmargin: 0px auto;\r\n\r\n\t\t\t\tp {\r\n\t\t\t\t\tmargin-left: 20px;\r\n\t\t\t\t\tmargin-right: 20px;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t#bg-blog {\r\n\t\ttext-align: center;\r\n\r\n\t\th3,\r\n\t\tp {\r\n\t\t\ttext-align: left !important;\r\n\t\t}\r\n\t\timg {\r\n\t\t\theight: 220px;\r\n\t\t}\r\n\t}\r\n\r\n\tarticle {\r\n\t\tbackground-color: $white;\r\n\t\tpadding: 0 20px 10px 20px;\r\n\r\n\t\timg {\r\n\t\t\ttext-align: center;\r\n\t\t}\r\n\r\n\t\th3 {\r\n\t\t\ta {\r\n\t\t\t\ttext-decoration: none;\r\n\t\t\t\tcolor: $primary-colour;\r\n\r\n\t\t\t\t&:hover {\r\n\t\t\t\t\ttext-decoration: underline;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t.topic-pill {\r\n\t\t\tpadding: 0.6em;\r\n\t\t\tfont-size: 0.9em;\r\n\t\t\tborder-radius: 2px;\r\n\t\t\tbackground-color: $topic-pill;\r\n\t\t\tvertical-align: middle;\r\n\t\t}\r\n\t\t.author {\r\n\t\t\tmargin-top: 20px;\r\n\t\t}\r\n\t}\r\n\r\n\t.explore-ph {\r\n\t\tbackground-color: $secondary-colour4;\r\n\t}\r\n\r\n\t.explore-pc {\r\n\t\tbackground-color: $secondary-colour1;\r\n\t}\r\n\r\n\t.explore-pp {\r\n\t\tbackground-color: $secondary-colour2;\r\n\t}\r\n\r\n\t.explore-ph,\r\n\t.explore-pc,\r\n\t.explore-pp {\r\n\t\tpadding: 30px 20px 0 20px;\r\n\t\ttext-align: center;\r\n\r\n\t\timg {\r\n\t\t\theight: 120px;\r\n\t\t}\r\n\r\n\t\tp,\r\n\t\th3 {\r\n\t\t\tcolor: $white;\r\n\t\t}\r\n\t}\r\n\r\n\t.sitemap,\r\n\t.copyright,\r\n\t.contact {\r\n\t\tmargin-bottom: 20px;\r\n\t}\r\n\r\n\t#bg-blog {\r\n\t\tarticle {\r\n\t\t\tp {\r\n\t\t\t\ta {\r\n\t\t\t\t\ttext-decoration: underline;\r\n\r\n\t\t\t\t\t&:hover {\r\n\t\t\t\t\t\tcolor: $secondary-colour1;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t#bg-help {\r\n\t\tarticle {\r\n\t\t\tpadding: 20px 20px 0 20px;\r\n\t\t\ttext-align: center;\r\n\r\n\t\t\timg {\r\n\t\t\t\theight: 120px;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t#getinvolved {\r\n\t\t.emph {\r\n\t\t\tfont-size: 1.4em;\r\n\t\t\tcolor: $primary-colour;\r\n\t\t\tfont-weight: 700;\r\n\t\t}\r\n\t\t.getinvolved-info {\r\n\t\t\t.cta {\r\n\t\t\t\tmargin: 0;\r\n\t\t\t}\r\n\t\t}\r\n\t\t.getinvolved-image {\r\n\t\t\ttext-align: center;\r\n\r\n\t\t\timg {\r\n\t\t\t\theight: 250px;\r\n\t\t\t\tpadding: 20px 0;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// Screen reader only\r\n\t.sr-only {\r\n\t\tborder: 0;\r\n\t\tclip: rect(0, 0, 0, 0);\r\n\t\theight: 1px;\r\n\t\tmargin: -1px;\r\n\t\toverflow: hidden;\r\n\t\tpadding: 0;\r\n\t\tposition: absolute;\r\n\t\twidth: 1px;\r\n\t}\r\n\ta {\r\n\t\ttext-decoration: none;\r\n\r\n\t\t&:hover {\r\n\t\t\ttext-decoration: underline;\r\n\t\t}\r\n\r\n\t\t&:focus {\r\n\t\t\toutline: 3px solid $focus-blue;\r\n\t\t\toutline-offset: 4px;\r\n\t\t}\r\n\t}\r\n\t.btn-primary {\r\n\t\tbackground-color: $primary-colour;\r\n\t\tborder: 2px solid $primary-colour;\r\n\t\tcolor: $white;\r\n\t\tfont-size: 1.15em;\r\n\t\tdisplay: inline-block;\r\n\t\ttext-align: center;\r\n\t\tborder-radius: 2px;\r\n\t\tvertical-align: middle;\r\n\t\tpadding: 10px 16px;\r\n\r\n\t\t&:hover,\r\n\t\t&:focus {\r\n\t\t\tbackground-color: $white;\r\n\t\t\tcolor: $secondary-colour3;\r\n\t\t\tborder: 2px solid $secondary-colour3;\r\n\t\t\ttext-decoration: none;\r\n\t\t}\r\n\r\n\t\t&:focus {\r\n\t\t\toutline: 3px solid $focus-blue;\r\n\t\t\toutline-offset: 4px;\r\n\t\t}\r\n\t}\r\n\r\n\t.btn-secondary {\r\n\t\tbackground-color: none;\r\n\t\tborder: 2px solid $white;\r\n\t\tcolor: $white;\r\n\t\tfont-size: 1.15em;\r\n\t\tdisplay: inline-block;\r\n\t\ttext-align: center;\r\n\t\tborder-radius: 2px;\r\n\t\tvertical-align: middle;\r\n\t\tpadding: 10px 16px;\r\n\r\n\t\t&:hover,\r\n\t\t&:focus {\r\n\t\t\tbackground-color: $white;\r\n\t\t\tcolor: $secondary-colour3;\r\n\t\t\tborder: 2px solid $white;\r\n\t\t\ttext-decoration: none;\r\n\t\t}\r\n\r\n\t\t&:focus {\r\n\t\t\toutline: 3px solid $black;\r\n\t\t\toutline-offset: 4px;\r\n\t\t}\r\n\t}\r\n\r\n\t.btn-tertiary {\r\n\t\tbackground-color: $white;\r\n\t\tborder: 2px solid $primary-colour;\r\n\t\tcolor: $primary-colour;\r\n\t\tfont-size: 1.15em;\r\n\t\tdisplay: inline-block;\r\n\t\ttext-align: center;\r\n\t\tborder-radius: 2px;\r\n\t\tvertical-align: middle;\r\n\t\tpadding: 10px 16px;\r\n\r\n\t\t&:hover,\r\n\t\t&:focus {\r\n\t\t\tbackground-color: $primary-colour;\r\n\t\t\tcolor: $white;\r\n\t\t\tborder: 2px solid $primary-colour;\r\n\t\t\ttext-decoration: none;\r\n\t\t}\r\n\r\n\t\t&:focus {\r\n\t\t\toutline: 3px solid $focus-blue;\r\n\t\t\toutline-offset: 4px;\r\n\t\t}\r\n\t}\r\n\r\n\t.cta {\r\n\t\tpadding-bottom: 50px;\r\n\t}\r\n\t.wrapper {\r\n\t\tmax-width: 1200px;\r\n\t\tmargin: 0 auto;\r\n\t}\r\n\t.bg-image {\r\n\t\tbackground-position: center;\r\n\t\tbackground-size: cover;\r\n\t\twidth: 100%;\r\n\t\tmin-height: 400px;\r\n\t\talign-items: center;\r\n\t\tjustify-content: center;\r\n\r\n\t\th2 {\r\n\t\t\tmax-width: 1200px;\r\n\t\t\tmargin: 0 auto;\r\n\t\t}\r\n\r\n\t\t.cta {\r\n\t\t\ttext-align: center;\r\n\t\t}\r\n\r\n\t\t.image-header {\r\n\t\t\tbackground-color: $white;\r\n\t\t\tborder: 1px solid $grey;\r\n\t\t\tpadding: 40px 20px;\r\n\t\t\twidth: 60%;\r\n\t\t\tmax-width: 1200px;\r\n\t\t\tmargin: 0 auto;\r\n\t\t\tz-index: 1;\r\n\t\t\ttext-align: center;\r\n\r\n\t\t\t@include mq($mq-tablet) {\r\n\t\t\t\tbackground-color: $white;\r\n\t\t\t\tborder: none;\r\n\t\t\t\tpadding: 60px 40px;\r\n\t\t\t\twidth: 100%;\r\n\t\t\t\tmargin: 0 auto;\r\n\t\t\t}\r\n\r\n\t\t\th2 {\r\n\t\t\t\tfont-size: 1.28em;\r\n\t\t\t\tpadding: 15px 0 20px 0;\r\n\t\t\t\tcolor: $black;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t.alert {\r\n\t\t\tbackground-color: $primary-colour;\r\n\t\t\twidth: 60%;\r\n\t\t\tmax-width: 1200px;\r\n\t\t\tmargin: 0 auto;\r\n\t\t\ttext-align: center;\r\n\r\n\t\t\t@include mq($mq-tablet) {\r\n\t\t\t\twidth: 100%;\r\n\t\t\t\tmargin: 0 auto;\r\n\t\t\t}\r\n\r\n\t\t\tp {\r\n\t\t\t\tmargin: 0;\r\n\t\t\t\tpadding: 10px 0 8px 0;\r\n\r\n\t\t\t\ta {\r\n\t\t\t\t\tcolor: $white;\r\n\t\t\t\t\ttext-decoration: underline;\r\n\r\n\t\t\t\t\t&:hover {\r\n\t\t\t\t\t\tcolor: $secondary-colour5;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t&:focus {\r\n\t\t\t\t\t\toutline: 3px solid $white;\r\n\t\t\t\t\t\toutline-offset: 4px;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n","// Footer\r\nfooter {\r\n\tbackground-color: $secondary-colour3;\r\n\twidth: 100%;\r\n\r\n\t> * {\r\n\t\tcolor: $white;\r\n\t}\r\n\r\n\tp,\r\n\th2 {\r\n\t\tcolor: $white;\r\n\t}\r\n\r\n\ta {\r\n\t\tcolor: $white;\r\n\r\n\t\t&:hover {\r\n\t\t\tcolor: $secondary-colour5;\r\n\t\t}\r\n\r\n\t\t&:focus {\r\n\t\t\toutline: 3px solid $white;\r\n\t\t\toutline-offset: 4px;\r\n\t\t}\r\n\t}\r\n\r\n\tul {\r\n\t\tpadding: 0;\r\n\t\tmargin: 0;\r\n\r\n\t\tli {\r\n\t\t\tlist-style: none;\r\n\t\t\tmargin: 0;\r\n\t\t\tpadding: 0;\r\n\t\t}\r\n\t}\r\n\r\n\t.sitemap {\r\n\t\tpadding-bottom: 30px;\r\n\t\tmargin-bottom: 10px;\r\n\t\tborder-bottom: 1px solid $grey;\r\n\t}\r\n\r\n\t.contact {\r\n\t\t.connect {\r\n\t\t\tul {\r\n\t\t\t\tli {\r\n\t\t\t\t\tdisplay: inline;\r\n\t\t\t\t\tpadding-right: 10px;\r\n\r\n\t\t\t\t\ta {\r\n\t\t\t\t\t\t&:hover,\r\n\t\t\t\t\t\t&:focus {\r\n\t\t\t\t\t\t\ti {\r\n\t\t\t\t\t\t\t\tcolor: $secondary-colour5;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t.copyright {\r\n\t\t.pull-right {\r\n\t\t\t@include mq($mq-desktop) {\r\n\t\t\t\ttext-align: right;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n","header {\r\n\twidth: 100%;\r\n\tdisplay: flex;\r\n\tjustify-content: space-between;\r\n}\r\n\r\nmain {\r\n\t.grid-container {\r\n\t\tmax-width: 1200px;\r\n\t\tmargin: 0 auto;\r\n\t\tdisplay: grid;\r\n\t\tgrid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\r\n\t\tgrid-gap: 30px;\r\n\t\tpadding-bottom: 60px;\r\n\r\n\t\tarticle {\r\n\t\t\tposition: relative;\r\n\t\t\tdisplay: block;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfooter {\r\n\t.sitemap {\r\n\t\tdisplay: grid;\r\n\t\tgrid-template-columns: repeat(auto-fill, minmax(270px, 1fr));\r\n\t\tgrid-gap: 20px;\r\n\t}\r\n\r\n\t.contact {\r\n\t\tdisplay: grid;\r\n\t\tgrid-gap: 20px;\r\n\r\n\t\t.footer-links {\r\n\t\t\tposition: relative;\r\n\t\t\tdisplay: block;\r\n\t\t}\r\n\t}\r\n\r\n\t.copyright {\r\n\t\tdisplay: grid;\r\n\t}\r\n}\r\n\r\n@media only screen and (min-width: 992px) {\r\n\t/* Grid for desktop */\r\n\tmain {\r\n\t\t.grid-container-donate {\r\n\t\t\tmax-width: 1200px;\r\n\t\t\tmargin: 0 auto;\r\n\t\t\tdisplay: grid;\r\n\t\t\tgrid-template-columns: 75% 25%;\r\n\t\t\tgrid-gap: 30px;\r\n\t\t\tpadding-bottom: 50px;\r\n\r\n\t\t\tdiv {\r\n\t\t\t\tposition: relative;\r\n\t\t\t\tdisplay: block;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfooter {\r\n\t\t.contact {\r\n\t\t\tgrid-template-columns: 50% 25% 25%;\r\n\t\t}\r\n\t\t.copyright {\r\n\t\t\tgrid-template-columns: 50% 50%;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n@media only screen and (max-width: 992px) {\r\n\t/* Grid for tablets */\r\n\tmain {\r\n\t\t.grid-container-donate {\r\n\t\t\tmax-width: 100%;\r\n\r\n\t\t\tdiv {\r\n\t\t\t\tpadding-bottom: 20px;\r\n\t\t\t\tmargin: 0 20px;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tfooter {\r\n\t\t.contact {\r\n\t\t\tgrid-template-columns: 100%;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n@media only screen and (max-width: 768px) {\r\n\t/* Grid for mobile phones */\r\n\tfooter {\r\n\t\t.contact {\r\n\t\t\tgrid-template-columns: 100%;\r\n\t\t}\r\n\t}\r\n}\r\n","* {\r\n\tword-spacing: 0.01em;\r\n\tletter-spacing: 0.02em;\r\n}\r\n\r\n// Header Styles\r\n\r\nh1,\r\nh2,\r\nh3,\r\nh4,\r\nh5,\r\nh6 {\r\n\tfont-weight: 700;\r\n\tline-height: 1.3em;\r\n\tcolor: $primary-colour;\r\n}\r\n\r\nh1 {\r\n\tfont-size: 2.85rem;\r\n\tmargin: 0;\r\n}\r\n\r\nh2 {\r\n\tfont-size: 2.25rem;\r\n\tmargin: 0;\r\n}\r\n\r\nh3 {\r\n\tfont-size: 1.85rem;\r\n}\r\n\r\nh4 {\r\n\tfont-size: 1.65rem;\r\n}\r\n\r\nh5 {\r\n\tfont-size: 1.35rem;\r\n}\r\n\r\nh6 {\r\n\tfont-size: 1.15rem;\r\n}\r\n\r\n/* Mobile */\r\n@media only screen and (max-width: 768px) {\r\n\th1 {\r\n\t\tfont-size: 2.3rem;\r\n\t}\r\n\th2 {\r\n\t\tfont-size: 1.9rem;\r\n\t}\r\n\th3 {\r\n\t\tfont-size: 1.5rem;\r\n\t}\r\n}\r\n\r\n// Text styles\r\n\r\np {\r\n\tcolor: $black;\r\n\tfont-size: 1em;\r\n\tmargin-bottom: 2em;\r\n\tline-height: 1.5em;\r\n}\r\n\r\nul {\r\n\tli {\r\n\t\tline-height: 1.75em;\r\n\t}\r\n}\r\n\r\nfooter {\r\n\th2 {\r\n\t\tmargin: 25px 0;\r\n\t\tfont-size: 1.25em;\r\n\r\n\t\ta {\r\n\t\t\ttext-decoration: none;\r\n\t\t}\r\n\t}\r\n\r\n\tp {\r\n\t\tmargin: 16px 0 0 0;\r\n\t}\r\n\r\n\t.connect {\r\n\t\ti {\r\n\t\t\tfont-size: 2.4em;\r\n\t\t}\r\n\t}\r\n}\r\n"]}